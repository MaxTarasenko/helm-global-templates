# Default values for global-one.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository:
  env:
  name: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

#command: ["python", "-m"]
#args: ["my-app", "--arg1", "value1"]

# If you need one container
env: {}
#  # Set with simple value
#  DB_HOST: # Name
#    value: host # Values
#  # Set with secret
#  DB_PASS: # Name
#    secret: # set secret
#      name: db-secrets
#      key: password

# If you need multiple containers
containers: []
#  - name: container1
#    image:
#      repository: repo1
#      name: name1
#      tag: tag1
#    command: ["python", "-m"]
#    args: ["my-app", "--arg1", "value1"]
#    env:
#      DB_HOST:
#        value: "default-host"
#      DB_USER:
#        value: "default-user"
#      DB_PASS:
#        secret:
#          name: "default-secrets"
#          key: "default-password"
#  - name: container2
#    image:
#      repository: repo2
#      name: name2
#      tag: tag2
#    command: ["python", "-m"]
#    args: ["my-app", "--arg1", "value1"]
#    env:
#      DB_HOST:
#        value: "default-host"
#      DB_USER:
#        value: "default-user"
#      DB_PASS:
#        secret:
#          name: "default-secrets"
#          key: "default-password"

# For init container
initContainers: []
#  - name: my-init-container
#    image:
#      repository: my-repo
#      name: my-init-app
#      tag: latest
#    env:
#      INIT_DB_HOST:
#        value: "init-default-host"
#      INIT_DB_USER:
#        value: "init-default-user"
#      INIT_DB_PASS:
#        secret:
#          name: "init-default-secrets"
#          key: "init-default-password"

healthCheck:
  livenessProbe:
    enable: false
    initialDelaySeconds: 300
    periodSeconds: 20
    timeoutSeconds: 10
    failureThreshold: 5
  readinessProbe:
    enable: false
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 10
    failureThreshold: 5
  path: /
  port: http

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

imagePullSecrets: []

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

nameOverride: ""
fullnameOverride: ""
